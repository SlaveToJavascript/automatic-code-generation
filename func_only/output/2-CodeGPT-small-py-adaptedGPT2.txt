 : if i == 0 : return 0 else : return max(i+1, i+1_max-1) else : raise ValueError("'max' can't be None if not multiplexed.") else : if len(self.nodes) > 0 : raise ValueError("'max' can't be None if not multiplexed.") else : return max(list(self.nodes.values()), list(max([0] + list(max(i, i+1) for i in self.nodes[0].iterkeys())))) </s><pad> def _build_query_with_filter(self, query): if self._query_joins is not None: query = self._query_joins.build(query) return query </s><pad> def _extract_version(filename): m = re.search(r"^__version__ = ['\"]([^'\"]*)['\"]", filename) if m: return int(m.group(1)) else: raise ValueError("malformed.version file: %s" % filename) </s><pad> def _run_migrations_online(): """ Runs all the migrations in the database and returns the result. """ from django.core.management import call_command global _run_migrations_online _run_migrations_online = True if not