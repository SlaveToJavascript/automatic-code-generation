 or odd in one of the valid range. """ assert isinstance(value, (int, long)), value if self.range: return 2 ** value - 1 return value </s><pad> def __init__(self, **kwargs): super(AzureStoragePool, self).__init__(**kwargs) self.enabled_state = kwargs.get('enabled_state', None) self.container_protocol = kwargs.get('container_protocol', None) self.container_protocol_state = kwargs.get('container_protocol_state', None) self.service_backend_name = kwargs.get('service_backend_name', None) self.type = 'AzureStoragePool' </s><pad> def get_data(self): """Read the data from the device and return the data as a dictionary""" data = self.__class__.__dict__.get('data', {}) data['id'] = self.id # We don't want to overwrite the data if it already exists. if data['id'] in data: raise ValueError('Can\'t get data with ID {}'.format(data['id'])) # Check if there are any devices with the ID of this device. devices = [dev for dev in self.devices if device.id == self.id] if len(devices) ==